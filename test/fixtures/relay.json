[
  {
    "//": "used for pushing up webhooks from github",
    "method": "POST",
    "path": "/",
    "valid": [
      {
        "path": "commits.*.added.*",
        "value": "package.json"
      },
      {
        "path": "commits.*.modified.*",
        "value": "package.json"
      },
      {
        "path": "commits.*.added.*",
        "value": ".snyk"
      },
      {
        "path": "commits.*.modified.*",
        "value": ".snyk"
      }
    ]
  },
  {
    "method": "GET",
    "path": "/filtered-on-query",
    "valid": [
      {
        "queryParam": "filePath",
        "values": ["**/package.json", "**/yarn.lock"]
      }
    ]
  },
  {
    "method": "GET",
    "path": "/filtered-on-multiple-queries",
    "valid": [
      {
        "queryParam": "filePath",
        "values": ["**/package.json", "**/yarn.lock"]
      },
      {
        "queryParam": "download",
        "values": ["true"]
      }
    ]
  },
  {
    "method": "GET",
    "path": "/filtered-on-query-with-dot",
    "valid": [
      {
        "queryParam": "filePath",
        "values": ["**/*Dockerfile"]
      }
    ]
  },
  {
    "method": "POST",
    "path": "/filtered-on-query-and-body",
    "valid": [
      {
        "queryParam": "filePath",
        "values": ["**/package.json", "**/yarn.lock"]
      },
      {
        "path": "commits.*.added.*",
        "value": "package.json"
      },
      {
        "path": "commits.*.modified.*",
        "value": "package.json"
      },
      {
        "path": "commits.*.added.*",
        "value": ".snyk"
      },
      {
        "path": "commits.*.modified.*",
        "value": ".snyk"
      }
    ]
  },
  {
    "//": "used to filter only the wanted graphql query",
    "method": "POST",
    "path": "/graphql",
    "valid": [
      {
        "//": "malformed regex does not break other filters",
        "path": "query",
        "regex": "INVALID regex ("
      },
      {
        "//": "query for all the file names 2 levels deep in the repo. used for auto project detection",
        "path": "query",
        "regex": "{\\s*repositoryOwner\\(login:\\s*\"([a-zA-Z0-9-_.]+)\"\\)\\s*{\\s*repository\\(name:\\s*\"([a-zA-Z0-9-_.]+)\"\\)\\s*{\\s*object\\(expression:\\s*\"([a-zA-Z0-9-_./:]+)\"\\)\\s*{\\s*\\.\\.\\.\\s*on\\s+Tree\\s+{\\s*entries\\s*{\\s*name\\s+type\\s+object\\s*{\\s*\\.\\.\\.\\s*on\\s+Tree\\s+{\\s*entries\\s*{\\s*name\\s+type\\s+object\\s*{\\s*\\.\\.\\.\\s*on\\s+Tree\\s*{\\s*entries\\s*{\\s*name\\s+type\\s*}\\s*}\\s*}\\s*}\\s*}\\s*}\\s*}\\s*}\\s*}\\s*}\\s*}\\s*}"
      },
      {
        "//": "query to find open snyk pull requests, allowing auto dependency upgrade pull requests to open no more than a limited amount of pull requests",
        "path": "query",
        "regex": "{\\s*search\\(\\s*query: \"repo:[a-zA-Z0-9-_.]+\\/[a-zA-Z0-9-_.]+ is:pr state:[a-zA-Z]+ head:snyk-\\s*(is:[a-zA-Z]+)?\", type: ISSUE, last: [0-9]+\\s*\\)\\s*{\\s*edges {\\s*node {\\s*\\.\\.\\. on PullRequest {\\s*url\\s*title\\s*createdAt\\s*headRefName\\s*state\\s*mergeable\\s*body\\s*repository\\s*{\\s*name\\s*}\\s*}\\s*}\\s*}\\s*}\\s*rateLimit\\s*{\\s*limit\\s*cost\\s*remaining\\s*resetAt\\s*}\\s*}\\s*"
      }
    ]
  },
  {
    "//": "basic auth route",
    "method": "GET",
    "path": "/basic-auth",
    "auth": {
      "scheme": "basic",
      "username": "user",
      "password": "pass"
    }
  },
  {
    "//": "token auth route",
    "method": "GET",
    "path": "/token-auth",
    "auth": {
      "scheme": "token",
      "token": "1234"
    }
  },
  {
    "//": "accept header whitelist",
    "method": "GET",
    "path": "/accept-header",
    "valid": [
      {
        "header": "accept",
        "values": ["allowed.header"]
      }
    ]
  }
]
